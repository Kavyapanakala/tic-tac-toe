<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: #f4f4f9;
    }
    .game-container {
      text-align: center;
    }
    h1 {
      margin-bottom: 20px;
      color: #333;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      margin: 0 auto;
    }
    .cell {
      width: 100px;
      height: 100px;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 2rem;
      font-weight: bold;
      background: #fff;
      border: 2px solid #333;
      cursor: pointer;
      transition: background 0.3s;
    }
    .cell:hover {
      background: #e6e6e6;
    }
    .status {
      margin-top: 15px;
      font-size: 1.2rem;
      font-weight: bold;
    }
    .restart-btn {
      margin-top: 10px;
      padding: 8px 15px;
      font-size: 1rem;
      cursor: pointer;
      background: #333;
      color: #fff;
      border: none;
      border-radius: 4px;
    }
    .restart-btn:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>Tic Tac Toe</h1>
    <div class="board" id="board"></div>
    <div class="status" id="status">Player X's turn</div>
    <button class="restart-btn" onclick="restartGame()">Restart</button>
  </div>

  <script>
    const board = document.getElementById("board");
    const statusText = document.getElementById("status");
    let currentPlayer = "X";
    let gameActive = true;
    let gameState = ["", "", "", "", "", "", "", "", ""];

    // Winning combinations
    const winConditions = [
      [0,1,2], [3,4,5], [6,7,8], // rows
      [0,3,6], [1,4,7], [2,5,8], // cols
      [0,4,8], [2,4,6]           // diagonals
    ];

    // Create board cells
    function createBoard() {
      board.innerHTML = "";
      gameState.forEach((cell, index) => {
        const cellElement = document.createElement("div");
        cellElement.classList.add("cell");
        cellElement.setAttribute("data-index", index);
        cellElement.textContent = cell;
        cellElement.addEventListener("click", handleCellClick);
        board.appendChild(cellElement);
      });
    }

    function handleCellClick(e) {
      const index = e.target.getAttribute("data-index");

      if (gameState[index] !== "" || !gameActive) return;

      gameState[index] = currentPlayer;
      e.target.textContent = currentPlayer;

      if (checkWinner()) {
        statusText.textContent = `🎉 Player ${currentPlayer} Wins!`;
        gameActive = false;
      } else if (!gameState.includes("")) {
        statusText.textContent = "😐 It's a Draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        statusText.textContent = `Player ${currentPlayer}'s turn`;
      }
    }

    function checkWinner() {
      return winConditions.some(condition => {
        return condition.every(index => gameState[index] === currentPlayer);
      });
    }

    function restartGame() {
      currentPlayer = "X";
      gameActive = true;
      gameState = ["", "", "", "", "", "", "", "", ""];
      statusText.textContent = `Player ${currentPlayer}'s turn`;
      createBoard();
    }

    // Initialize
    createBoard();
  </script>
</body>
</html>
